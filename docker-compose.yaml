version: "3.8"
services:
  # dev:
  #   container_name: nestjs_api_dev
  #   image: nestjs-api-dev:1.0.0
  #   build:
  #     context: ./packages/back
  #     target: development
  #     dockerfile: Dockerfile
  #   command: npm run start:debug
  #   ports:
  #     - 3000:3000
  #     - 9229:9229
  #   networks:
  #     - nesjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped

  # prod:
  #   container_name: nestjs_api_prod
  #   image: nestjs-api-prod:1.0.0
  #   build:
  #     context: ./packages/back
  #     target: production
  #     dockerfile: Dockerfile
  #   command: npm run start:prod
  #   ports:
  #     - 3000:3000
  #     - 9229:9229
  #   networks:
  #     - nesjs-network
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   restart: unless-stopped

  db:
    image: postgres:14.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - postgres-network

  pgadmin:
    image: dpage/pgadmin4:6.8
    environment:
      PGADMIN_DEFAULT_EMAIL: "xhcampos@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "15432:80"
    depends_on:
      - db
    networks:
      - postgres-network

volumes:
  db:
    driver: local

networks:
  postgres-network:
    driver: bridge
  # nesjs-network:
